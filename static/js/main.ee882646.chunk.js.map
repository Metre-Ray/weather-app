{"version":3,"sources":["components/Weather.module.scss","components/Form.module.scss","components/Titles.module.css","components/Form.jsx","components/Titles.jsx","components/Weather.jsx","services/storageService.js","context/themeContext.js","App.js","index.js"],"names":["module","exports","Form","props","action","className","styles","formContainer","onSubmit","getWeather","type","name","placeholder","input","defaultValue","value1","value2","button","Titles","titlesContainer","Weather","temperature","humidity","pressure","city","country","description","longitude","latitude","windSpeed","base","error","weather","Fragment","label","storageService","setItems","item1","item2","localStorage","setItem","getItems","tempItem","getItem","split","map","el","trim","clearStorage","clear","themeContext","createContext","API_KYE","DEFAULT_STATE","defaultCity","undefined","defaultCountry","tempreture","time","App","state","event","a","async","preventDefault","target","elements","value","setState","url","fetch","api_call","json","data","cod","message","main","temp","wind","speed","coord","lon","lat","sys","dt","this","Provider","Date","toLocaleString","navigator","onLine","Component","ReactDOM","render","document","getElementById","window","addEventListener","serviceWorker","register","then","registration","console","log","payload","location","href","performance","getEntriesByType","r","installing","postMessage","catch","err"],"mappings":"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","file":"static/js/main.ee882646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__1I7LG\",\"label\":\"Weather_label__25R0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Form_formContainer__14oAW\",\"input\":\"Form_input__3LhLM\",\"button\":\"Form_button__2ItY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlesContainer\":\"Titles_titlesContainer__H7HAp\"};","import React from 'react';\r\nimport styles from './Form.module.scss';\r\n\r\nconst Form = (props) => (\r\n  <form action=\"\" className={styles.formContainer} onSubmit={props.getWeather}>\r\n    <input type=\"text\" name=\"city\" placeholder=\"City...\" className={styles.input} defaultValue={props.value1}/>\r\n    <input type=\"text\" name=\"country\" placeholder=\"Country...\" className={styles.input} defaultValue={props.value2}/>\r\n    <button className={styles.button}>Get Weather</button>\r\n  </form>\r\n)\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styles from './Titles.module.css';\r\n\r\nconst Titles = () => (\r\n  <div className={styles.titlesContainer}>\r\n    <h1>Weather search</h1>\r\n    <p>Find out weather, temperature and other conditions</p>\r\n  </div>\r\n);\r\n\r\nexport default Titles;\r\n","import React from \"react\";\r\nimport styles from './Weather.module.scss';\r\n\r\nconst Weather = (props) => {\r\n  const { temperature, humidity, pressure, city, country,\r\n    description, longitude, latitude, windSpeed, base, error } = props;\r\n  return (\r\n    <div className={styles.weather}>\r\n      { city && (\r\n        <React.Fragment>\r\n          <p><span className={styles.label}>Location:</span> {city}, {country}</p>\r\n          <p><span className={styles.label}>Coordinates:</span> long: {longitude}, lat: {latitude}</p>\r\n          <p><span className={styles.label}>Temperature:</span> {temperature} Â°C </p>\r\n          <p><span className={styles.label}>Humidity:</span> {humidity} % </p>\r\n          <p><span className={styles.label}>Pressure:</span> {pressure} hpa </p>\r\n          <p><span className={styles.label}>Wind speed:</span> {windSpeed} m/s </p>\r\n          <p><span className={styles.label}>Conditions:</span> {description}</p>\r\n          <p><span className={styles.label}>Data acquired from: </span> {base}</p>\r\n        </React.Fragment>\r\n      ) }\r\n      { error && <p>{error}</p> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather;\r\n","const STORAGE_KEY = 'weather-search-app';\r\n\r\nconst storageService = {\r\n  setItems: (item1, item2) => {\r\n    localStorage.setItem(STORAGE_KEY, `${item1} ; ${item2}`);\r\n  },\r\n  getItems: () => {\r\n    const tempItem = localStorage.getItem(STORAGE_KEY);\r\n    if (!tempItem) return [null, null];\r\n    const [city, country] = tempItem.split(';').map((el) => el.trim());\r\n    return [city, country];\r\n  },\r\n  clearStorage: () => {\r\n    localStorage.clear();\r\n  }\r\n}\r\n\r\nexport default storageService;\r\n","import { createContext } from 'react';\r\n\r\nconst themeContext = createContext('');\r\n\r\nexport default themeContext;\r\n","import React, { Component } from 'react'\r\nimport Form from './components/Form';\r\nimport Titles from './components/Titles';\r\nimport Weather from './components/Weather';\r\nimport storageService from './services/storageService';\r\nimport themeContext from './context/themeContext';\r\n\r\nimport './App.css';\r\n\r\n// exposed on purpose\r\nconst API_KYE = '8bf768353480692e06febb4c621734e9';   // change this with your key\r\n\r\nconst DEFAULT_STATE = {\r\n  defaultCity: undefined,\r\n  defaultCountry: undefined,\r\n  tempreture: undefined,\r\n  city: undefined,\r\n  country: undefined,\r\n  humidity: undefined,\r\n  pressure: undefined,\r\n  windSpeed: undefined,\r\n  description: undefined,\r\n  longitude: undefined,\r\n  latitude: undefined,\r\n  base: undefined,\r\n  time: undefined,\r\n  error: undefined\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {...DEFAULT_STATE}\r\n\r\n  getWeather = async (event) => {\r\n    event.preventDefault();\r\n    const city = event.target.elements.city.value;\r\n    const country = event.target.elements.country.value;\r\n    if (!city || !country) {\r\n      this.setState({\r\n        ...DEFAULT_STATE,\r\n        error: 'Please, enter city and country',\r\n      });\r\n      return;\r\n    }\r\n    const url =\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&APPID=${API_KYE}`;\r\n    const api_call = await fetch(url);\r\n    const data = await api_call.json();\r\n    if (data.cod !== 200) {\r\n      this.setState({\r\n        ...DEFAULT_STATE,\r\n        error: `Sorry, ${data.message}`,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      temperature: data.main.temp,\r\n      pressure: data.main.pressure,\r\n      humidity: data.main.humidity,\r\n      windSpeed: data.wind.speed,\r\n      longitude: data.coord.lon,\r\n      latitude: data.coord.lat,\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      description: data.weather[0].description,\r\n      base: data.base,\r\n      time: data.dt,\r\n      error: '',\r\n    });\r\n    storageService.setItems(city, country);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const [city, country] = storageService.getItems();\r\n    this.setState({\r\n      defaultCity: city,\r\n      defaultCountry: country\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <themeContext.Provider value=\"dark\">\r\n          <Titles />\r\n        </themeContext.Provider>\r\n        <Form getWeather={this.getWeather} value1={this.state.defaultCity} value2={this.state.defaultCountry} />\r\n        <Weather {...this.state} />\r\n        <div className=\"status\">Date: {this.state.time ? new Date(this.state.time * 1000).toLocaleString() : 'time is not defined'}</div>\r\n        <div className=\"status\">Network status: {navigator.onLine ? 'online' : 'offline'}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregister();\n\n/* eslint-disable */\n\nfunction register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      navigator.serviceWorker.register('serviceWorkerCustom.js')\n        .then(registration => {\n          console.log('Service Worker is registered.');\n          const data = {\n            type: 'CACHE_URLS',\n            payload: [\n              location.href,\n              ...performance.getEntriesByType('resource').map((r) => r.name)\n            ]\n          };\n          if (registration.installing) {\n            registration.installing.postMessage(data);\n          };\n        })\n        .catch(err => {\n          console.error('Registration of service worker failed:', err);\n        });\n    });\n  }\n}\n"],"sourceRoot":""}